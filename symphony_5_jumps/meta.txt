kind = sequential
title = "Jumps"
size = [-256, -256, 255, 255]
immutable_program = true
immutable_spec = true
copy_solution_to_level = ["symphony_6_ram"]
no_score = true
dialogue = [
  (info, `These are the [code][color=#ff9800]Modes[/color] of [color=#e49f44]Symphony[/color]:

[code]0 IO
1 ALU
2 JUMP
3 RAM[/code]

In this level we implement the JUMP mode. As always the instruction encoding is as follows:

[code][color=#ff9800]M[/color] = Mode
[color=#ff6680]O[/color] = Opcode
[color=#9966ff]I[/color] = Immediate bit
[color=#ffe666]D[/color] = Destination register
[color=#66ff99]A[/color] = Argument A
[color=#66ccff]B[/color] = Argument B
[color=#bbbbbb]0[/color] = Unused / zero[/code]

[code][color=#ff9800]MM[/color][color=#bbbbbb]O[/color][color=#9966ff]I[/color][color=#ff6680]OOOO[/color] [color=#bbbbbb]0[/color][color=#ffe666]DDD[/color][color=#bbbbbb]0[/color][color=#66ff99]AAA[/color] [color=#bbbbbb]00000[/color][color=#66ccff]BBB[/color] [color=#bbbbbb]00000000[/color][/code]

In JUMP mode, [color=#66ff99]argument A[/color] are the flags and should be compared with the condition, which is the [color=#ff6680]opcode[/color]. To compare them, use the "cond" custom component you built earlier.

If the flags match the condition, overwrite the counter value with [color=#66ccff]argument B[/color].`)]
default_isa_spec = `

[settings]
name = "Symphony"

[fields]

register
zr 000
r1 001
r2 010
r3 011
r4 100
r5 101
sp 110
flags 111

[instructions]

or %a(register), %b(register), %c(register)
01000001 0aaa0bbb 00000ccc 00000000
OR %b and %c and store the result in %a.

nand %a(register), %b(register), %c(register)
01000000 0aaa0bbb 00000ccc 00000000
NAND %b and %c and store the result in %a.

nor %a(register), %b(register), %c(register)
01000011 0aaa0bbb 00000ccc 00000000
NOR %b and %c and store the result in %a.

and %a(register), %b(register), %c(register)
01000010 0aaa0bbb 00000ccc 00000000
AND %b and %c and store the result in %a.

add %a(register), %b(register), %c(register)
01000100 0aaa0bbb 00000ccc 00000000
ADD %b and %c and store the result in %a.

sub %a(register), %b(register), %c(register)
01000101 0aaa0bbb 00000ccc 00000000
SUB %b and %c and store the result in %a.

xor %a(register), %b(register), %c(register)
01000110 0aaa0bbb 00000ccc 00000000
XOR %b and %c and store the result in %a.

lsl %a(register), %b(register), %c(register)
01000111 0aaa0bbb 00000ccc 00000000
LSL %b and %c and store the result in %a.

lsr %a(register), %b(register), %c(register)
01001000 0aaa0bbb 00000ccc 00000000
LSR %b and %c and store the result in %a.

cmp %a(register), %b(register)
01001001 01110aaa 00000bbb 00000000
Compares %a and %b and store the resulting flags in r6.


or %a(register), %b(register), %c(immediate)
01010001 0aaa0bbb cccccccc cccccccc
OR %b and %c and store the result in %a.

nand %a(register), %b(register), %c(immediate)
01010000 0aaa0bbb cccccccc cccccccc
NAND %b and %c and store the result in %a.

nor %a(register), %b(register), %c(immediate)
01010011 0aaa0bbb cccccccc cccccccc
NOR %b and %c and store the result in %a.

and %a(register), %b(register), %c(immediate)
01010010 0aaa0bbb cccccccc cccccccc
AND %b and %c and store the result in %a.

add %a(register), %b(register), %c(immediate)
01010100 0aaa0bbb cccccccc cccccccc
ADD %b and %c and store the result in %a.

sub %a(register), %b(register), %c(immediate)
01010101 0aaa0bbb cccccccc cccccccc
SUB %b and %c and store the result in %a.

xor %a(register), %b(register), %c(immediate)
01010110 0aaa0bbb cccccccc cccccccc
XOR %b and %c and store the result in %a.

lsl %a(register), %b(register), %c(immediate)
01010111 0aaa0bbb cccccccc cccccccc
LSL %b and %c and store the result in %a.

lsr %a(register), %b(register), %c(immediate)
01011000 0aaa0bbb cccccccc cccccccc
LSR %b and %c and store the result in %a.

cmp %a(register), %b(immediate)
01011001 01110aaa bbbbbbbb bbbbbbbb
Compares %a and %b and store the resulting flags in r6.


jmp %a(register)
10001000 00000111 00000aaa 00000000
Jump to %a

je %a(register)
10000001 00000111 00000aaa 00000000
Jump to %a if the values were equal (reading results / flags from r6).

jne %a(register)
10001001 00000111 00000aaa 00000000
Jump to %a if the values were not equal (reading results / flags from r6).


jb %a(register)
10000100 00000111 00000aaa 00000000
Jump to %a if the first value was below (unsigned) the second (reading results / flags from r6).

jae %a(register)
10001100 00000111 00000aaa 00000000
Jump to %a if the first value was above (unsigned) or equal to the second (reading results / flags from r6).

jbe %a(register)
10000101 00000111 00000aaa 00000000
Jump to %a if the First value was below (unsigned) or equal to the second (reading results / flags from r6).

ja %a(register)
10001101 00000111 00000aaa 00000000
Jump to %a if the first value was above (unsigned) the second (reading results / flags from r6).


jl %a(register)
10000010 00000111 00000aaa 00000000
Jump to %a if the first value was less (signed) than the second (reading results / flags from r6).

jge %a(register)
10001010 00000111 00000aaa 00000000
Jump to %a if the first value was greater (signed) or equal to the second (reading results / flags from r6).

jle %a(register)
10000011 00000111 00000aaa 00000000
Jump to %a if the first value was less (signed) or equal to the second (reading results / flags from r6).

jg %a(register)
10001011 00000111 00000aaa 00000000
Jump to %a if the first value was greater (signed) than the second (reading results / flags from r6).


jmp %a(immediate | label)
10011000 00000111 aaaaaaaa aaaaaaaa
Jump to %a

je %a(immediate | label)
10010001 00000111 aaaaaaaa aaaaaaaa
Jump to %a if the values were equal (reading results / flags from r6).

jne %a(immediate | label)
10011001 00000111 aaaaaaaa aaaaaaaa
Jump to %a if the values were not equal (reading results / flags from r6).


jb %a(immediate | label)
10010010 00000111 aaaaaaaa aaaaaaaa
Jump to %a if the first value was below (unsigned) the second (reading results / flags from r6).

jae %a(immediate | label)
10011010 00000111 aaaaaaaa aaaaaaaa
Jump to %a if the first value was above (unsigned) or euqal to the second (reading results / flags from r6).

jbe %a(immediate | label)
10010011 00000111 aaaaaaaa aaaaaaaa
Jump to %a if the First value was below (unsigned) or equal to the second (reading results / flags from r6).

ja %a(immediate | label)
10011011 00000111 aaaaaaaa aaaaaaaa
Jump to %a if the first value was above (unsigned) the second (reading results / flags from r6).


jl %a(immediate | label)
10010100 00000111 aaaaaaaa aaaaaaaa
Jump to %a if the first value was less (signed) than the second (reading results / flags from r6).

jge %a(immediate | label)
10011100 00000111 aaaaaaaa aaaaaaaa
Jump to %a if the first value was greater (signed) or equal to the second (reading results / flags from r6).

jle %a(immediate | label)
10010101 00000111 aaaaaaaa aaaaaaaa
Jump to %a if the first value was less (signed) or equal to the second (reading results / flags from r6).

jg %a(immediate | label)
10011101 00000111 aaaaaaaa aaaaaaaa
Jump to %a if the first value was greater (signed) than the second (reading results / flags from r6).

in %a(register)
00000001 0aaa0000 00000000 00000000
Loads an input and stores it in %a

out %a(register)
00000010 00000000 00000aaa 00000000
Sends %a to output

nop
00000000 00000000 00000000 00000000
Does nothing

`
default_assembly = `lsr r5, r5, 42940
or r2, r4, 57290
sub zr, r2, r4
and zr, r3, r5
in r2
in r2
cmp r2, r2
jmp label_5
in r3
in flags
cmp r3, flags
je label_6
label_6:
or zr, zr, 16373
in sp
in flags
xor sp, r2, 64397
in r2
label_5:
out flags
sub r3, r2, 25869
label_14:
label_15:
in zr
in flags
cmp zr, flags
jge label_15
out r1
or r4, r5, flags
label_18:
in r5
in r1
cmp r5, r1
jg label_18
in r2
in r3
cmp r2, r3
jl label_19
label_19:
sub r3, r3, r5
in r1
lsr r1, r1, 7319
lsl r5, sp, r5
nand flags, r1, 36728
out r5
in zr
in sp
cmp zr, sp
je label_14
lsr r4, flags, r3
out r4
out zr
add zr, zr, 16885
in sp
in r5
in r1
cmp r5, r1
je label_31
in sp
in r3
cmp sp, r3
jb label_32
label_32:
in r2
out flags
in r2
in r4
cmp r2, r4
jmp label_35
label_35:
label_31:
and flags, flags, 32478
nor r5, r5, 16050
and zr, r1, zr
nor r4, r3, r5
in flags
in flags
cmp flags, flags
jle label_40
label_41:
in r3
in sp
cmp r3, sp
jl label_41
xor r1, r1, 8132
in r3
out r2
in sp
nand zr, r3, 46974
label_47:
in r5
in r3
cmp r5, r3
jle label_47
label_48:
in flags
in r3
cmp flags, r3
je label_48
out r1
and zr, r1, 41554
out r5
label_40:
in flags
lsl r2, flags, 5672
label_54:
in zr
in r3
xor r1, zr, flags
in r3
lsl r2, r5, 60840
in sp
in sp
in r4
in r5
cmp r4, r5
jge label_54
out sp
in r4
out r3
in r1
in r1
cmp r1, r1
jae label_65
out sp
lsl zr, zr, r4
out r4
sub zr, flags, 61102
or r2, r5, 29459
label_65:
label_71:
label_72:
in r1
in r4
cmp r1, r4
jle label_72
label_73:
in r3
in flags
cmp r3, flags
jle label_73
in r4
in sp
cmp r4, sp
ja label_74
label_74:
in sp
in r3
cmp sp, r3
jne label_75
label_75:
label_76:
in flags
in r1
cmp flags, r1
jbe label_76
label_77:
in flags
in r5
cmp flags, r5
jne label_77
label_78:
in sp
in r2
cmp sp, r2
jae label_78
in r4
in r1
cmp r4, r1
jle label_71
xor sp, sp, r5
label_80:
and r2, r2, zr
out r3
in r4
in zr
cmp r4, zr
jb label_83
label_83:
nor r2, r4, 52288
label_85:
in zr
in zr
cmp zr, zr
jl label_85
lsl r3, sp, r5
out r5
label_88:
in r3
in r5
cmp r3, r5
jbe label_88
label_89:
in r2
in r2
cmp r2, r2
jmp label_89
lsl zr, flags, r3
in r1
in r2
cmp r1, r2
jge label_80
out zr
lsl r1, zr, r4
out r4
nand r2, r1, r5
lsr r3, zr, 61332
xor r1, r5, r4
nand r4, sp, r5
label_98:
and r2, sp, zr
lsl r2, r1, sp
in r4
lsl r1, r5, 8191
label_103:
in r4
in r2
cmp r4, r2
jne label_103
label_104:
in flags
in r4
cmp flags, r4
je label_104
in r4
in sp
cmp r4, sp
jne label_105
label_105:
in r5
in r2
in r2
cmp r2, r2
jge label_98
lsl r4, r3, 14148
in r4
in r4
cmp r4, r4
jge label_108
label_109:
in zr
in r3
cmp zr, r3
jmp label_109
in flags
in sp
cmp flags, sp
jae label_110
label_110:
in r4
out zr
in zr
in r2
in r3
cmp r2, r3
jl label_114
label_114:
in r3
in flags
cmp r3, flags
jb label_115
label_115:
in r3
in r3
cmp r3, r3
jg label_116
label_116:
xor r1, r2, 26250
label_108:
xor r3, r2, 62840
xor sp, r4, flags
in r1
in r3
label_122:
out flags
lsl r4, r3, flags
in zr
in zr
cmp zr, zr
ja label_122
nand r2, r1, 37003
in flags
in sp
cmp flags, sp
jle label_126
out r3
and r2, r1, 59537
in zr
in flags
cmp zr, flags
jl label_129
label_129:
in r4
add r1, zr, zr
label_126:
and r4, r5, sp
lsr r4, sp, 11495
in sp
label_135:
in r2
in flags
out sp
label_139:
in r4
in sp
cmp r4, sp
je label_139
lsl r2, r1, flags
in flags
in r5
cmp flags, r5
jl label_141
label_141:
label_142:
in r3
in r1
cmp r3, r1
jne label_142
nand sp, r1, r4
label_144:
in sp
in r4
cmp sp, r4
jmp label_144
in r3
in r3
cmp r3, r3
je label_145
label_145:
in r4
in r3
cmp r4, r3
jle label_135
xor flags, r3, 43443
label_147:
in sp
nand sp, sp, 50635
label_150:
in r3
in r4
cmp r3, r4
jb label_150
in r3
label_152:
in sp
in r5
cmp sp, r5
jmp label_152
out r1
in sp
nand flags, r4, r4
in zr
in r5
cmp zr, r5
jl label_156
label_156:
in zr
in zr
cmp zr, zr
je label_147
or flags, r2, 982
in r1
in r5
in r2
in r4
cmp r2, r4
jbe label_160
xor r4, r3, 47646
nor sp, zr, r1
nor r3, r2, sp
label_164:
in r4
in r3
cmp r4, r3
jne label_164
out r4
or r4, flags, r5
lsr sp, r3, 50113
in flags
in zr
cmp flags, zr
jle label_168
label_168:
out flags
label_160:
in sp
in r3
cmp sp, r3
jb label_170
in sp
out zr
label_170:
in sp
in r1
cmp sp, r1
jae label_173
in flags
in r4
cmp flags, r4
jbe label_174
label_174:
out sp
lsl flags, flags, 10118
out sp
label_173:
label_178:
lsl r5, r4, flags
label_180:
in r2
in r2
cmp r2, r2
je label_180
in r3
in r4
out r1
label_184:
in r2
in zr
cmp r2, zr
jne label_184
and r1, flags, r3
lsr r3, zr, flags
nand flags, r2, r4
in sp
label_189:
in r2
in r2
cmp r2, r2
jbe label_189
in r5
in zr
cmp r5, zr
ja label_178
nand r1, r1, 36791
xor r3, r1, 61316
label_192:
sub r2, r4, 30724
in r4
in flags
cmp r4, flags
jmp label_192
lsr sp, r2, 44528
in r1
in flags
cmp r1, flags
je label_195
label_196:
in r3
in sp
cmp r3, sp
jae label_196
in r5
and r1, r2, 52236
in r2
in r4
cmp r2, r4
jmp label_199
label_199:
nor flags, r4, r5
add r4, r3, 48805
label_195:
in r2
out r5
in zr
or r4, r3, 53871
out sp
label_207:
out r2
or sp, r2, flags
lsl r4, r5, 9828
in r1
in r3
cmp r1, r3
jne label_211
label_211:
in flags
in sp
cmp flags, sp
je label_212
label_212:
out r4
in r2
in zr
cmp r2, zr
ja label_207
nor r4, r3, 53582
in flags
in zr
cmp flags, zr
jg label_215
out r2
out zr
label_218:
in sp
in r2
cmp sp, r2
jl label_218
in r5
sub sp, flags, r1
label_221:
in zr
in zr
cmp zr, zr
jg label_221
out r1
label_215:
in r1
in sp
cmp r1, sp
jae label_223
in r4
add flags, r4, r2
in zr
in flags
cmp zr, flags
jle label_226
label_226:
out r5
xor sp, r5, 30537
lsr flags, sp, 31941
label_223:
in flags
label_231:
nor r3, zr, 10310
nor flags, r2, r1
in r4
in zr
cmp r4, zr
jge label_234
label_234:
nand sp, zr, r4
xor r5, r1, 37949
in r2
in flags
cmp r2, flags
jne label_237
label_237:
label_238:
in flags
in r3
cmp flags, r3
jge label_238
and r2, r4, flags
in r2
in r2
cmp r2, r2
jae label_231
or r1, r5, r2
out r3
in r4
in sp
in r4
cmp sp, r4
je label_243
in r2
in r3
xor zr, r2, sp
in r2
in r3
cmp r2, r3
ja label_247
label_247:
in r1
in zr
cmp r1, zr
jne label_248
label_248:
label_243:
in r1
in r1
cmp r1, r1
jmp label_249
in r3
in zr
lsr r4, zr, r2
in r4
label_249:
in r4
in r4
cmp r4, r4
jle label_254
in sp
in zr
cmp sp, zr
jl label_255
label_255:
nand r1, r1, 64108
lsl r1, zr, 55100
out r2
label_254:
out r5
xor r1, r1, 33682
label_261:
out sp
out sp
out r5
in zr
out zr
out flags
sub r5, flags, 23810
in zr
label_270:
in sp
in sp
cmp sp, sp
jbe label_270
in r4
in zr
cmp r4, zr
jbe label_271
label_271:
in r4
in r2
cmp r4, r2
je label_261
in sp
in sp
cmp sp, sp
ja label_272
lsr sp, r3, 34883
add r5, r2, 46658
or sp, r4, 9872
in r5
nand zr, r2, 60321
in r1
in r1
cmp r1, r1
jbe label_278
label_278:
label_279:
in r5
in r4
cmp r5, r4
jae label_279
label_280:
in r1
in zr
cmp r1, zr
jle label_280
label_281:
in r2
in r5
cmp r2, r5
je label_281
nor r4, r1, sp
label_272:
in r1
label_284:
in flags
out r4
xor r4, r1, r1
xor r5, r5, 58307
in r1
in r1
cmp r1, r1
jge label_289
label_289:
in r2
in flags
cmp r2, flags
jbe label_290
label_290:
lsl r4, r1, zr
out r4
in r4
in flags
cmp r4, flags
jmp label_293
label_293:
in r4
in r4
cmp r4, r4
jmp label_284
out sp
out r4
and flags, zr, 48181
in r3
label_298:
or r4, flags, 43867
label_300:
in r1
in zr
cmp r1, zr
jg label_300
nand r1, sp, r2
in zr
in r2
in r2
cmp r2, r2
jg label_303
label_303:
and flags, r1, flags
in zr
in zr
cmp zr, zr
jl label_305
label_305:
in sp
in sp
cmp sp, sp
ja label_298
label_306:
in flags
nor r5, r5, r2
in r5
out r2
out r5
out r2
label_313:
in r5
in r4
cmp r5, r4
je label_313
sub r5, zr, r4
in zr
or r1, r2, 18500
label_317:
in r3
in flags
cmp r3, flags
jg label_317
in r2
in r3
cmp r2, r3
je label_306
or r3, flags, flags
in r1
in r3
cmp r1, r3
jbe label_319
label_320:
in r2
in zr
cmp r2, zr
jg label_320
or r2, sp, 22258
label_322:
in flags
in sp
cmp flags, sp
jge label_322
nor r1, r3, r2
out zr
out r1
label_326:
in r2
in flags
cmp r2, flags
jl label_326
label_319:
in r1
in r5
cmp r1, r5
jg label_327
out r3
nor zr, r1, 2294
in r4
in zr
in r3
nor r1, r2, 9782
in r4
in r3
label_327:
label_336:
in r5
in r5
cmp r5, r5
jne label_337
label_337:
nor r3, zr, 49573
in sp
in sp
in r1
in r3
cmp r1, r3
jb label_336
in r4
in r3
and r1, r4, zr
in r5
in zr
add r4, zr, 23232
and sp, sp, 12031
or r4, r5, flags
label_349:
add zr, r5, r2
in zr
in r3
cmp zr, r3
jg label_351
label_351:
out flags
in flags
in r4
cmp flags, r4
jbe label_353
label_353:
in r1
in r4
cmp r1, r4
jne label_349
label_354:
out r5
nand r4, zr, r4
label_357:
in r5
in zr
cmp r5, zr
jg label_357
out sp
in r3
label_360:
in r2
in r5
cmp r2, r5
je label_360
in r5
in r5
in sp
cmp r5, sp
jae label_354
in r1
in sp
sub sp, r5, 36211
lsr flags, r2, r1
out r4
label_367:
lsl r2, r3, r4
label_369:
in r2
in r2
cmp r2, r2
jle label_369
in r4
in r2
cmp r4, r2
jbe label_367
add r5, r3, r4
xor r3, zr, 59482
lsr zr, r5, flags
sub r3, r3, 43763
label_374:
and flags, r2, r2
in r5
out zr
in r3
in r1
cmp r3, r1
jae label_378
label_378:
label_379:
in zr
in r2
cmp zr, r2
jae label_379
sub r2, r3, flags
label_381:
in r5
in r3
cmp r5, r3
je label_381
in sp
in r5
cmp sp, r5
jge label_382
label_382:
in r2
in r5
cmp r2, r5
jne label_374
in sp
in r5
label_385:
in r4
in r4
cmp r4, r4
jbe label_386
label_386:
label_387:
in sp
in r3
cmp sp, r3
jle label_387
sub r5, r1, 44629
out r5
in r3
out zr
sub r4, r4, 59961
in r5
in r5
cmp r5, r5
jb label_385
or sp, r5, flags
lsr r1, sp, 22192
out zr
or r4, sp, r2
label_397:
out r2
in r3
and r3, r5, 58985
nand r4, r4, r5
lsr r4, r3, r3
label_403:
in flags
in r2
cmp flags, r2
jbe label_403
label_404:
in r3
in r3
cmp r3, r3
jle label_404
in sp
out r1
in r2
in r4
in r4
cmp r4, r4
je label_397
nand sp, r2, 50303
nand r2, r4, 21633
nand zr, sp, 41478
label_411:
and r5, zr, 33345
nand r1, flags, 35799
in zr
in zr
cmp zr, zr
jb label_411
label_414:
in r4
in r3
cmp r4, r3
je label_415
label_415:
in flags
in r3
cmp flags, r3
jle label_414
in r4
in zr
cmp r4, zr
jl label_416
xor r4, r3, 55006
in r1
in r1
cmp r1, r1
jle label_418
label_418:
in r2
in sp
cmp r2, sp
jl label_419
label_419:
label_416:
in sp
in r5
cmp sp, r5
je label_420
label_421:
in r4
in r1
cmp r4, r1
jg label_421
in flags
xor zr, r4, 13081
in r3
lsl r3, flags, r3
add sp, flags, 28876
out sp
in r4
in r4
cmp r4, r4
jle label_428
label_428:
in flags
out r1
label_431:
in r5
in flags
cmp r5, flags
jmp label_431
label_420:
in r3
in r1
cmp r3, r1
jge label_432
in sp
in r1
cmp sp, r1
jbe label_433
label_433:
label_432:
label_434:
label_435:
in r1
in sp
cmp r1, sp
jge label_435
label_436:
in sp
in sp
cmp sp, sp
jne label_436
in flags
in zr
label_439:
in r5
in r5
cmp r5, r5
jb label_439
out r4
label_441:
in r2
in zr
cmp r2, zr
jb label_441
sub zr, r5, 10660
in r3
in flags
cmp r3, flags
jb label_434
label_443:
label_444:
in r3
in r3
cmp r3, r3
jle label_444
label_445:
in r5
in zr
cmp r5, zr
jbe label_445
sub zr, r5, r4
nand r2, r1, r4
in r2
in flags
cmp r2, flags
jb label_448
label_448:
xor r1, zr, r3
in r5
in r4
in r4
cmp r4, r4
jbe label_451
label_451:
out r4
label_453:
in r4
in flags
cmp r4, flags
jle label_453
in flags
in sp
cmp flags, sp
jbe label_443
in r5
in flags
cmp r5, flags
jb label_454
add sp, r4, 46903
nand sp, sp, sp
label_457:
in r4
in zr
cmp r4, zr
jb label_457
lsr r3, flags, 37228
lsr zr, sp, 39889
in flags
in r4
cmp flags, r4
jae label_460
label_460:
nand r4, r5, 15509
in r1
label_454:
in r3
in r5
cmp r3, r5
jbe label_463
out r4
label_465:
in r2
in r1
cmp r2, r1
jl label_465
or zr, sp, 35089
lsr flags, r4, 37305
sub r2, r4, 56648
in r5
in flags
cmp r5, flags
ja label_469
label_469:
lsr r3, r5, r2
label_463:
in r1
in zr
cmp r1, zr
jl label_471
out flags
and r3, zr, 18120
label_471:
in r1
or r5, r3, 22048
in r2
in r1
out sp
xor sp, flags, zr
in r1
in flags
cmp r1, flags
jle label_480
in sp
in zr
label_480:
xor zr, r2, 29601
add r2, flags, r1
and r5, zr, r5
lsl r4, r4, 29172
or r3, flags, zr
out sp
label_489:
label_490:
in r3
in r2
cmp r3, r2
jg label_490
in r3
in r2
cmp r3, r2
jne label_489
and flags, r5, 22180
in zr
in r3
cmp zr, r3
jne label_492
in r2
in flags
cmp r2, flags
jne label_493
label_493:
sub r1, r4, 38805
sub sp, sp, 35792
label_496:
in r1
in zr
cmp r1, zr
jg label_496
xor r5, r3, 30359
or r1, r5, 17745
in zr
label_492:
label_500:
label_501:
in r4
in zr
cmp r4, zr
ja label_501
out zr
in zr
or r3, r5, 26484
out zr
nand r5, r5, 39382
and flags, sp, 12512
or flags, sp, zr
or zr, r5, r5
in r5
in r1
cmp r5, r1
jne label_500
in r3
in r2
cmp r3, r2
jb label_510
xor r2, r4, 64834
in r2
xor r3, r5, 62671
label_510:
in zr
out zr
out zr
sub r1, r3, 20031
out r2
in r3
or zr, flags, 50188
in r5
label_522:
sub zr, r2, 24697
label_524:
in zr
in zr
cmp zr, zr
jge label_524
nor r2, flags, r5
in zr
in r1
cmp zr, r1
jg label_526
label_526:
in zr
in r3
cmp zr, r3
jne label_522
in sp
in r1
cmp sp, r1
jg label_527
in r3
and flags, r5, r5
label_527:
or r4, r2, r2
in r2
in zr
cmp r2, zr
jne label_531
in r5
add flags, zr, r4
in zr
and flags, r3, r4
in r5
in r1
in r3
cmp r1, r3
jl label_537
label_537:
label_538:
in r4
in r4
cmp r4, r4
jbe label_538
in r2
label_531:
label_540:
in r5
in r5
cmp r5, r5
jl label_541
label_541:
in r1
in r3
cmp r1, r3
jmp label_542
label_542:
add flags, sp, r5
label_544:
in r5
in r3
cmp r5, r3
jae label_544
out r5
in r5
in r5
cmp r5, r5
jg label_540
in r1
out flags
in r1
in sp
cmp r1, sp
jne label_548
and r2, flags, 29451
in r4
label_548:
nand r5, sp, 23167
nor r2, r1, 63852
out r4
sub r3, zr, 37347
lsr r2, r3, flags
or zr, flags, 55897
nor r4, r5, 40346
or sp, r5, 36271
and r2, r2, flags
lsr sp, zr, 38710
out sp
xor r5, r4, r5
in r2
in r5
cmp r2, r5
jae label_563
in r1
in zr
cmp r1, zr
jne label_564
label_564:
nand r4, zr, 24531
sub r5, r5, 8367
out r1
in r5
label_569:
in r5
in zr
cmp r5, zr
jne label_569
out r2
out r1
in r1
label_563:
sub flags, r3, zr
out r1
out zr
out flags
add zr, r3, 35587
lsl zr, r4, 55705
in zr
in r1
cmp zr, r1
jle label_579
and zr, flags, r3
label_579:
in sp
in r3
lsr zr, sp, flags
out r3
nand r1, flags, r2
nor r4, zr, 24834
nand flags, r1, 9077
lsl zr, r3, 45769
in r3
out sp
or flags, flags, r3
label_592:
nor flags, r4, r4
out flags
in r1
in sp
cmp r1, sp
jge label_595
label_595:
in r1
in flags
cmp r1, flags
je label_592
out flags
label_597:
in r1
label_599:
in zr
in r1
cmp zr, r1
jne label_599
nand flags, r2, r3
or flags, zr, 15469
in flags
in r1
cmp flags, r1
jmp label_602
label_602:
in r1
out r4
and r5, zr, r2
in flags
in r3
cmp flags, r3
ja label_606
label_606:
in r1
in r4
in sp
cmp r4, sp
jne label_597
out sp
nor r5, zr, r3
in r2
in r4
cmp r2, r4
jg label_610
in r1
in r5
in r1
cmp r5, r1
jg label_612
label_612:
label_613:
in sp
in flags
cmp sp, flags
jl label_613
in r5
out r3
out flags
label_610:
sub r1, r1, 39352
in flags
out r1
out r2
in flags
nor r3, r4, sp
xor r5, r2, r5
in r3
in r2
cmp r3, r2
jmp label_624
nor r3, zr, sp
add r3, zr, sp
or r3, r2, 5044
nand r1, sp, 12707
out r3
label_624:
in zr
out zr
label_632:
in r5
in r1
cmp r5, r1
jbe label_633
label_633:
label_634:
in r3
in r3
cmp r3, r3
jbe label_634
in r2
in r4
cmp r2, r4
jge label_632
in flags
in sp
in r5
in r1
cmp r5, r1
jb label_637
lsr flags, r4, r1
in zr
label_637:
in zr
in flags
cmp zr, flags
jge label_640
in zr
in r4
lsl r4, r2, zr
or zr, r5, r5
lsr flags, r4, 14917
out r4
in r2
in r1
out r5
label_640:
out r5
out r1
out zr
lsr flags, flags, r4
lsl sp, r5, r1
in r5
in r1
cmp r5, r1
jge label_655
in r2
in r1
label_655:
out r4
lsl r4, r1, 6325
label_660:
in r5
xor sp, r3, r4
lsr r1, sp, zr
in r3
lsl zr, r5, 52973
label_666:
in zr
in r3
cmp zr, r3
jmp label_666
label_667:
in zr
in zr
cmp zr, zr
jae label_667
in r2
and flags, r1, r4
nor r3, r5, r2
in r5
in r3
in sp
cmp r3, sp
jae label_660
in flags
in r5
cmp flags, r5
jge label_672
nor r3, flags, zr
xor flags, sp, 56833
in r5
in flags
in r3
cmp flags, r3
jg label_676
label_676:
add r5, r5, 53901
label_672:
in r3
nand r4, r3, 20461
in r3
in r3
cmp r3, r3
jge label_680
in zr
in r5
in r1
label_684:
in flags
in r5
cmp flags, r5
jbe label_684
in zr
in r2
cmp zr, r2
jle label_685
label_685:
label_686:
in r4
in r5
cmp r4, r5
jb label_686
out zr
or zr, r5, 36127
in r2
label_680:
in r2
in r1
cmp r2, r1
jle label_690
out flags
lsr r1, r4, 3598
or flags, flags, 13869
in r5
in r1
label_690:
out r1
in flags
in r5
cmp flags, r5
jb label_697
out flags
in flags
in r2
cmp flags, r2
ja label_699
label_699:
in sp
lsl zr, r2, flags
out r3
label_703:
in r4
in r5
cmp r4, r5
jle label_703
in r1
in r3
cmp r1, r3
je label_704
label_704:
in zr
label_697:
lsr r3, r5, zr
lsl sp, r4, 39003
label_708:
label_709:
in sp
in zr
cmp sp, zr
jg label_709
in r4
lsl r3, r5, r3
in r4
lsr sp, r3, 8057
label_714:
in r5
in r4
cmp r5, r4
jl label_714
in r5
sub sp, r3, r1
xor r2, r5, r1
in r5
in flags
cmp r5, flags
jb label_718
label_718:
in r3
in sp
cmp r3, sp
jge label_708
label_719:
nor flags, zr, flags
lsl r3, flags, sp
in r2
in r1
cmp r2, r1
jl label_719
sub sp, r4, sp
in r3
in sp
cmp r3, sp
jle label_723
sub r1, zr, r5
out r2
label_723:
nor r3, sp, 56184
nand r5, r3, 64213
sub r3, r1, sp
label_729:
label_730:
in r4
in r2
cmp r4, r2
jge label_730
out r1
add flags, flags, r2
xor r1, zr, r5
or r3, r5, r2
and r5, sp, 52466
in r1
in sp
in r5
cmp sp, r5
jle label_729
in sp
in r1
cmp sp, r1
jmp label_737
label_738:
in r2
in flags
cmp r2, flags
jbe label_738
in r4
in r4
out zr
label_742:
in flags
in r4
cmp flags, r4
ja label_742
label_743:
in r5
in r1
cmp r5, r1
jae label_743
label_737:
label_744:
lsl r3, zr, r4
in r5
in r1
cmp r5, r1
jb label_744
in r2
in r3
cmp r2, r3
je label_746
in sp
in r4
cmp sp, r4
jg label_747
label_747:
lsl r1, r1, 54125
in r5
in r5
in zr
label_752:
in r3
in r1
cmp r3, r1
je label_752
out r5
in r2
in r2
cmp r2, r2
jmp label_754
label_754:
xor r1, r1, 29983
or flags, flags, sp
out sp
label_746:
in r3
in r1
cmp r3, r1
jb label_758
out r4
out r3
out sp
in r5
nor sp, sp, 10899
in r4
in flags
cmp r4, flags
ja label_764
label_764:
out zr
in r5
label_767:
in r4
in r1
cmp r4, r1
jmp label_767
label_758:
or zr, r1, sp
or zr, zr, r1
label_770:
in sp
out zr
lsr sp, r2, r1
in r2
sub r1, zr, r3
nor r5, r2, sp
add r5, r2, 11540
out r3
label_779:
in r1
in r1
cmp r1, r1
je label_779
xor flags, r2, 56353
in r5
in r1
cmp r5, r1
jae label_770
out flags
in r5
in r3
label_784:
in sp
in r5
cmp sp, r5
jmp label_785
label_785:
out r4
out zr
out flags
nor r1, r4, 20006
label_790:
in r1
in r5
cmp r1, r5
jge label_790
label_791:
in r5
in zr
cmp r5, zr
jmp label_791
out zr
in zr
or r5, r4, 46498
in r2
in r1
cmp r2, r1
jl label_784
lsl zr, r4, 47256
out r4
out flags
in zr
in r3
cmp zr, r3
jmp label_798
and r5, r3, r1
out r4
in r5
in flags
cmp r5, flags
jmp label_801
label_801:
label_802:
in r2
in r5
cmp r2, r5
ja label_802
nor zr, sp, r1
in r3
lsl flags, r1, r1
in r3
sub r1, r5, r4
label_808:
in r1
in sp
cmp r1, sp
jg label_808
label_798:
in r3
in flags
cmp r3, flags
je label_809
in r5
in r4
cmp r5, r4
je label_810
label_810:
out sp
label_812:
in r3
in r1
cmp r3, r1
ja label_812
in r4
in r3
cmp r4, r3
jae label_813
label_813:
label_814:
in zr
in zr
cmp zr, zr
jne label_814
label_809:
nand sp, r5, r3
label_816:
lsl r4, zr, 20399
nand r4, r4, flags
label_819:
in flags
in r4
cmp flags, r4
jae label_819
label_820:
in r5
in sp
cmp r5, sp
jbe label_820
label_821:
in r3
in sp
cmp r3, sp
jmp label_821
out zr
label_823:
in r2
in r1
cmp r2, r1
je label_823
in r3
in r4
cmp r3, r4
jb label_816
out r5
in zr
xor sp, r2, 46073
out r1
in flags
in r1
cmp flags, r1
jg label_828
in r4
in r5
cmp r4, r5
jbe label_829
label_829:
label_828:
lsl zr, r2, 51249
lsr r5, r2, 5373
in r5
add r2, r2, zr
in flags
out r2
in r5
in zr
cmp r5, zr
jmp label_836
out zr
and sp, r3, 10105
label_836:
label_839:
in r4
in zr
cmp r4, zr
jae label_840
label_840:
and r1, r4, r2
out r4
in sp
in r1
cmp sp, r1
jle label_843
label_843:
add sp, zr, zr
in r5
in r3
cmp r5, r3
jg label_845
label_845:
in flags
in r1
in sp
cmp r1, sp
jge label_847
label_847:
in r4
in r3
cmp r4, r3
jb label_839
out flags
xor r2, sp, 48033
in zr
lsl zr, flags, r2
in zr
in r1
cmp zr, r1
jbe label_852
in r2
label_852:
out r3
or flags, flags, 44682
in flags
lsr r4, r2, r5
label_858:
out r5
out r1
nor r2, r1, flags
in sp
in r4
cmp sp, r4
jle label_858
and r1, r5, r5
label_863:
out flags
xor flags, r1, sp
label_866:
in r2
in zr
cmp r2, zr
jg label_866
out zr
xor r2, zr, r3
in flags
in flags
cmp flags, flags
jae label_863
in sp
in r1
cmp sp, r1
jmp label_869
out sp
in flags
in r4
cmp flags, r4
jmp label_871
label_871:
out r5
label_873:
in r5
in r4
cmp r5, r4
ja label_873
and zr, sp, 39645
lsl r5, zr, r3
in sp
add r4, zr, r5
label_869:
label_878:
and r5, r4, 60708
label_880:
in r5
in r5
cmp r5, r5
jle label_880
and r2, sp, r5
in r2
lsl sp, zr, 25639
in r3
in flags
cmp r3, flags
jmp label_878
in r1
add zr, r3, 46415
lsl flags, zr, flags
in r2
in zr
in flags
cmp zr, flags
je label_888
or sp, flags, 39968
in r1
in flags
in sp
cmp flags, sp
jbe label_891
label_891:
out r2
label_893:
in r2
in r4
cmp r2, r4
jl label_893
or sp, r3, flags
out r1
label_888:
out r2
lsl zr, flags, 17263
out sp
in zr
in zr
cmp zr, zr
jmp label_899
label_900:
in r2
in r4
cmp r2, r4
jg label_900
in r4
in r4
in r2
cmp r4, r2
jl label_902
label_902:
in r4
in r5
cmp r4, r5
ja label_903
label_903:
label_904:
in r2
in sp
cmp r2, sp
je label_904
label_899:
label_905:
in r5
in zr
cmp r5, zr
jbe label_906
label_906:
out r5
xor flags, r5, sp
label_909:
in flags
in flags
cmp flags, flags
jmp label_909
lsl r3, r3, 59323
out zr
in r3
in r4
cmp r3, r4
ja label_912
label_912:
in sp
in sp
cmp sp, sp
jge label_905
label_913:
label_914:
in flags
in r1
cmp flags, r1
jmp label_914
in sp
in r2
nor zr, r4, r1
in sp
in sp
in zr
cmp sp, zr
jmp label_913
sub sp, zr, 11268
in r1
in flags
in r3
cmp flags, r3
jl label_921
nor r4, r4, r5
label_921:
lsr r5, sp, 50859
label_924:
in sp
in sp
cmp sp, sp
je label_925
label_925:
in r1
in r1
cmp r1, r1
jae label_926
label_926:
label_927:
in flags
in r3
cmp flags, r3
jb label_927
in r5
in r1
out zr
in r5
in sp
cmp r5, sp
jle label_931
label_931:
in flags
in r3
cmp flags, r3
ja label_932
label_932:
and r1, flags, r3
in zr
in sp
cmp zr, sp
jmp label_924
add r5, r1, r5
in zr
out flags
out flags
in r4
nand r3, r3, 6271
out r5
label_941:
xor sp, sp, flags
sub zr, r3, flags
nand r1, flags, 54445
nor r2, zr, 35931
label_946:
in r4
in r5
cmp r4, r5
jl label_946
out sp
lsr zr, r3, 26368
in r2
in r4
cmp r2, r4
ja label_941
out sp
in r3
in r3
sub r4, r2, r5
in zr
in flags
cmp zr, flags
jg label_953
label_954:
in flags
in r2
cmp flags, r2
jg label_954
label_953:
in flags
in r3
cmp flags, r3
jbe label_955
or r3, r1, r4
in zr
sub r5, sp, sp
in r2
in r5
cmp r2, r5
jle label_959
label_959:
and zr, zr, zr
out r3
and r1, sp, r3
label_963:
in r3
in r1
cmp r3, r1
je label_963
out r4
label_965:
in zr
in r1
cmp zr, r1
jmp label_965
label_955:
label_966:
and r5, r1, 21136
in r5
in r5
in r4
cmp r5, r4
jb label_969
label_969:
label_970:
in r2
in flags
cmp r2, flags
jae label_970
in flags
in r5
cmp flags, r5
jmp label_966
out r3
in r4
in r3
in r4
cmp r3, r4
jne label_973
in sp
in r3
cmp sp, r3
ja label_974
label_974:
xor r5, r1, r5
or sp, r5, zr
sub sp, r4, r3
nor zr, r3, r3
or zr, sp, flags
label_980:
in flags
in r5
cmp flags, r5
ja label_980
out r4
in r5
in flags
cmp r5, flags
jle label_982
label_982:
label_973:
in flags
in r5
cmp flags, r5
jmp label_983
xor zr, r3, zr
in r3
in r3
cmp r3, r3
jl label_985
label_985:
in r4
xor sp, sp, r2
in r3
in flags
label_983:
lsr flags, zr, 746
out r2
label_992:
sub flags, r3, r1
label_994:
in r3
in zr
cmp r3, zr
jmp label_994
sub sp, r5, r1
out flags
nor r5, r2, zr
label_998:
in r4
in r5
cmp r4, r5
jl label_998
lsr zr, r2, 5262
in flags
in r1
in r4
cmp r1, r4
jne label_992
label_1001:
in sp
in r1
cmp sp, r1
jbe label_1001
`